"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6616],{5271:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var t=e(4848),o=e(8453);const s={sidebar_position:6},i="When Structure",a={id:"operators/when-structure",title:"When Structure",description:"Other types of When",source:"@site/docs/operators/when-structure.md",sourceDirName:"operators",slug:"/operators/when-structure",permalink:"/kotlinworld/docs/operators/when-structure",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/operators/when-structure.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Operators",permalink:"/kotlinworld/docs/operators/"}},l={},c=[{value:"Other types of When",id:"other-types-of-when",level:2}];function u(n){const r={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,o.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"when-structure",children:"When Structure"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-kotlin",children:'\r\nfun main() {  \r\n  \r\n    val x = 0  \r\n  \r\n  when (x){  \r\n        10 -> println("x is 10")  \r\n        20 -> println("x is 20")  \r\n        30 -> println("x is 30")  \r\n        else -> println("x is not 10, 20 or 30 (Unknow)")  \r\n    }  \r\n  \r\n    when (x){  \r\n        10, 20 -> println("x is 10 or 20")  \r\n        30 -> println("x is 30")  \r\n        else -> println("x is not 10, 20 or 30 (Unknow)")  \r\n    }  \r\n  \r\n    when (x) {  \r\n        in 0..10 -> println("x is in the range 0 to 10")  \r\n        in 11..20 -> println("x is in the range 11 to 20")  \r\n        !in 30 ..40 -> println("x is not in the range 30 to 40")  \r\n    }  \r\n}\r\n\r\n\n'})}),"\n",(0,t.jsx)(r.h2,{id:"other-types-of-when",children:"Other types of When"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-kotlin",children:'fun main() {\r\n\r\n    // Other Structures of When\r\n    val x = 10\r\n\r\n    when{\r\n        x > 0 -> println("Positivo")\r\n        x < 0 -> println("Negativo")\r\n        else -> println("Zero")\r\n    }\r\n\r\n    val s = when {\r\n        x > 0 -> ("Positivo")\r\n        x < 0 -> ("Negativo")\r\n        else -> ("Zero")\r\n    }\r\n\r\n    println(s)\r\n\r\n    println(when {\r\n        x > 0 -> ("Positivo")\r\n        x < 0 -> ("Negativo")\r\n        else -> ("Zero")\r\n    })\r\n\r\n    val s2 = \'A\'\r\n\r\n    val v = when(s2){\r\n        \'A\', \'a\' -> 1\r\n        \'B\', \'b\' -> 2\r\n        else -> 3\r\n    }\r\n}\n'})})]})}function h(n={}){const{wrapper:r}={...(0,o.R)(),...n.components};return r?(0,t.jsx)(r,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},8453:(n,r,e)=>{e.d(r,{R:()=>i,x:()=>a});var t=e(6540);const o={},s=t.createContext(o);function i(n){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function a(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:i(n.components),t.createElement(s.Provider,{value:r},n.children)}}}]);