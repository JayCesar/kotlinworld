"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6858],{7614:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var t=r(4848),s=r(8453);const o={sidebar_position:6},a="Operators",i={id:"operators/operators",title:"Operators",description:"Arithmentic Operators",source:"@site/docs/operators/operators.md",sourceDirName:"operators",slug:"/operators/",permalink:"/kotlinworld/docs/operators/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/operators/operators.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"\ud83c\udfeb Operators",permalink:"/kotlinworld/docs/category/-operators"},next:{title:"When Structure",permalink:"/kotlinworld/docs/operators/when-structure"}},l={},c=[{value:"Arithmentic Operators",id:"arithmentic-operators",level:2},{value:"Types Conversions",id:"types-conversions",level:2},{value:"Relational operators",id:"relational-operators",level:2},{value:"Logic Operators",id:"logic-operators",level:2},{value:"Assignment Operators",id:"assignment-operators",level:2},{value:"Exercise about even and ODD",id:"exercise-about-even-and-odd",level:2},{value:"If as a values returning expression",id:"if-as-a-values-returning-expression",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"operators",children:"Operators"})}),"\n",(0,t.jsx)(n.h2,{id:"arithmentic-operators",children:"Arithmentic Operators"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"fun main() {\r\n    // Sum\r\n    println(10 + 5)\r\n\r\n    // Subtraction\r\n    println(10 - 5)\r\n\r\n    // Multiplication\r\n    println(3 * 3)\r\n\r\n    // Division\r\n    println(15 / 5)\r\n\r\n    // Modulo\r\n    println(15 % 4)\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"types-conversions",children:"Types Conversions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"\r\nfun main(){\r\n\tval a = 10\r\n\tval b = 3\r\n\tprintln(a / b)\r\n\t// The result is 3\r\n\t\r\n\t// Int does not accept decimal results\r\n\r\n\tprintln(10/3)\r\n\t// The result is 3\r\n\t\r\n\t// To fix this I need to set the type before\r\n\tval c: Double = 20.0\r\n\tval d = Double = 3.0\r\n\tprintln(30 / 3)\r\n\r\n\t// If I mix the numbers, Kotlin langue takes the most embracing\r\n}\r\n\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"relational-operators",children:"Relational operators"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"\r\nfun main(){\r\n\t// As results relational operators returns an boolean\r\n\tprintln(10 == 10)\r\n\t// Reply: True\r\n}\r\n\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"logic-operators",children:"Logic Operators"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'\r\nfun main(){\r\n\t\r\n\tprintln("T and F ${true && false}"\r\n\t// Reply: T AND F false \t\r\n}\r\n\n'})}),"\n",(0,t.jsx)(n.h2,{id:"assignment-operators",children:"Assignment Operators"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"\r\nfun main(){\r\n\t// It is like Java\r\n\t// Add link\r\n}\r\n\n"})}),"\n",(0,t.jsx)(n.h2,{id:"exercise-about-even-and-odd",children:"Exercise about even and ODD"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"I can add only the type of a variable then afterwards assign value into it"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"if-as-a-values-returning-expression",children:"If as a values returning expression"}),"\n",(0,t.jsxs)(n.p,{children:["The result from the last truthy expression inside the if block decision go into the variable ",(0,t.jsx)(n.strong,{children:'"r"'})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Obs:"})," It only works when I have the ",(0,t.jsx)(n.strong,{children:'"else"'})," block"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:'\t\r\n\tfun main(){\r\n\t\tval n = 10\r\n\t\t\r\n\t\t// The values from the If have to be from the same type\r\n\t\tvar r = if (n % 2 == 0){\r\n\t\t\t"Even"\r\n\t\t} else{\r\n\t\t\t"Odd"\r\n\t\t}\r\n\t}\r\n\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var t=r(6540);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);